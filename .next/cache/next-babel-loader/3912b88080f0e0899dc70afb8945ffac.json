{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport autoBind from 'react-autobind';\nimport Head from 'next/head';\nimport \"../styles/document.sass\";\nimport Sanity from '../sanity-client.js';\nimport { SanityImageUrl } from '../helperFunctions.js';\nimport File from \"./File.js\";\n\nconst BlockContent = require('@sanity/block-content-to-react');\n\nclass Document extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      data: []\n    });\n  }\n\n  componentDidMount() {\n    var data = this.props.data;\n    data[null] = '';\n    this.setState({\n      data: this.props.data\n    });\n  }\n\n  render() {\n    var imageKey = this.props.image;\n    var headlineKey = this.props.headline;\n    var primaryDetailKey = this.props.primaryDetail;\n    var secondaryDetailKey = this.props.secondaryDetail;\n    var tertiaryDetailKey = this.props.tertiaryDetail;\n    var bodyKey = this.props.body;\n    const serializers = {\n      types: {\n        code: props => __jsx(\"pre\", {\n          \"data-language\": props.node.language\n        }, __jsx(\"code\", null, props.node.code)),\n        file: props => {\n          var _ref = props.node.asset._ref;\n\n          var splitRef = _ref.split('-');\n\n          var reassembledFilename = splitRef[1] + '.' + splitRef[2];\n          var url = 'https://cdn.sanity.io/files/ocpl5ulk/pdp-data/' + reassembledFilename;\n\n          var Element = __jsx(File, {\n            src: url\n          });\n\n          return Element;\n        },\n        embed: props => __jsx(\"div\", {\n          className: \"embed\",\n          dangerouslySetInnerHTML: {\n            __html: props.node.code\n          }\n        })\n      }\n    };\n\n    function findFocalPoint(image) {\n      if (\"hotspot\" in image) {\n        var x = image.hotspot.x;\n        var y = image.hotspot.y;\n        return {\n          x: x,\n          y: y\n        };\n      } else {\n        return {\n          x: 0.5,\n          y: 0.5\n        };\n      }\n    }\n\n    var returnImg = function (item) {\n      if (imageKey == null) {\n        return '';\n      } else if (!(imageKey in item)) {\n        return '';\n      } else if (!(\"asset\" in item[imageKey])) {\n        return '';\n      } else {\n        return __jsx(\"img\", {\n          id: \"DocumentImage\",\n          src: SanityImageUrl(item[imageKey], {\n            w: 800,\n            h: 400,\n            fp: findFocalPoint(item[imageKey])\n          })\n        });\n      }\n    };\n\n    return __jsx(\"div\", {\n      id: \"DocumentContainer\"\n    }, returnImg(this.props.data) != '' ? __jsx(\"div\", {\n      id: \"ImageContainer\"\n    }, \" \", returnImg(this.props.data), \" \") : null, __jsx(\"div\", {\n      id: \"DocumentText\"\n    }, __jsx(\"h3\", null, this.props.data[headlineKey]), __jsx(\"h6\", {\n      style: {\n        display: primaryDetailKey != null || typeof primaryDetailKey !== 'undefined' ? 'inline' : 'none'\n      }\n    }, __jsx(\"span\", {\n      id: \"PrimaryDetail\"\n    }, this.props.data[primaryDetailKey]), __jsx(\"span\", {\n      id: \"DetailDivider\",\n      style: {\n        display: (secondaryDetailKey != null || typeof secondaryDetailKey !== 'undefined') && this.props.data[secondaryDetailKey] != '' ? 'inline' : 'none'\n      }\n    }, \"|\"), __jsx(\"span\", {\n      id: \"SecondaryDetail\"\n    }, this.props.data[secondaryDetailKey]), __jsx(\"span\", {\n      id: \"DetailDivider\",\n      style: {\n        display: (tertiaryDetailKey != null || typeof tertiaryDetailKey !== 'undefined') && this.props.data[tertiaryDetailKey] != '' ? 'inline' : 'none'\n      }\n    }, \"|\"), __jsx(\"span\", {\n      id: \"tertiaryDetail\"\n    }, this.props.data[tertiaryDetailKey])), __jsx(BlockContent, {\n      id: \"DocumentDescription\",\n      blocks: this.props.data[bodyKey],\n      serializers: serializers,\n      projectId: \"ocpl5ulk\",\n      dataset: \"pdp-data\"\n    })));\n  }\n\n}\n\nexport default Document;","map":null,"metadata":{},"sourceType":"module"}