{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/isaac/Desktop/PDP-Website/components/DocumentList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport autoBind from 'react-autobind';\nimport Head from 'next/head';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport Truncate from 'react-truncate';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC';\nimport { Textfit } from 'react-textfit';\nimport innerText from 'react-innertext';\nimport \"../styles/DocumentListStyle.sass\";\nimport Sanity from '../sanity-client.js';\nimport { SanityImageUrl } from '../helperFunctions.js';\n\nconst BlockContent = require('@sanity/block-content-to-react');\n\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis);\nexport default class DocumentList extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      data: []\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.data\n    });\n  }\n\n  render() {\n    var data = this.state.data;\n\n    if (\"maxLength\" in this.props) {\n      data = data.slice(0, 3);\n    }\n\n    var headlineKey = this.props.headline;\n    var imageKey = this.props.image;\n    var primaryDetailKey = this.props.primaryDetail;\n    var secondaryDetailKey = this.props.secondaryDetail;\n    var bodyKey = this.props.body;\n    const serializers = {\n      types: {\n        code: props => __jsx(\"pre\", {\n          \"data-language\": props.node.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, __jsx(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, props.node.code))\n      }\n    };\n\n    var returnImg = function (item) {\n      if (imageKey == null) {\n        return '';\n      } else if (!(imageKey in item)) {\n        return '';\n      } else if (!(\"asset\" in item[imageKey])) {\n        return '';\n      } else {\n        return __jsx(\"img\", {\n          class: \"DocumentListItemImage\",\n          src: SanityImageUrl(item[imageKey], {\n            w: 730,\n            h: 730\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n    };\n\n    var Items = data.slice(0, this.props.limit).map(function (itemData) {\n      return __jsx(Link, {\n        href: \"/\" + itemData._type + \"/[slug]\",\n        as: \"/\" + itemData._type + \"/\" + itemData.slug.current,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        className: \"DocumentListItem\",\n        key: itemData._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"DocumentListItemBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, returnImg(itemData), __jsx(\"div\", {\n        className: \"DocumentListItemText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(Textfit, {\n        max: 32,\n        mode: \"single\",\n        className: \"DocumentListItemName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, itemData[headlineKey]), __jsx(\"h2\", {\n        className: \"DocumentListItemName-Mobile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, itemData[headlineKey]), __jsx(Textfit, {\n        max: 14,\n        mode: \"single\",\n        className: \"DocumentListItemInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, __jsx(\"span\", {\n        className: \"DocumentListItemDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, itemData[primaryDetailKey]), \"\\xA0\", __jsx(\"span\", {\n        className: \"DocumentListItemInfoDivider\",\n        style: {\n          opacity: secondaryDetailKey == null || itemData[secondaryDetailKey] == '' ? '0' : '1'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" | \"), __jsx(\"span\", {\n        className: \"DocumentListItemPrice\",\n        style: {\n          display: itemData[secondaryDetailKey] == '' ? 'none' : 'inline'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, itemData[secondaryDetailKey])), __jsx(Truncate, {\n        lines: 4,\n        ellipsis: \"...\",\n        className: \"DocumentListItemDescription\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(BlockContent, {\n        blocks: itemData[bodyKey],\n        serializers: serializers,\n        projectId: \"ocpl5ulk\",\n        dataset: \"pdp-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))))));\n    });\n    return __jsx(\"ul\", {\n      id: \"DocumentList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, Items);\n  }\n\n}","map":{"version":3,"sources":["/Users/isaac/Desktop/PDP-Website/components/DocumentList.js"],"names":["React","Link","autoBind","Head","LinesEllipsis","Truncate","responsiveHOC","Textfit","innerText","Sanity","SanityImageUrl","BlockContent","require","ResponsiveEllipsis","DocumentList","Component","constructor","data","componentDidMount","setState","props","render","state","slice","headlineKey","headline","imageKey","image","primaryDetailKey","primaryDetail","secondaryDetailKey","secondaryDetail","bodyKey","body","serializers","types","code","node","language","returnImg","item","w","h","Items","limit","map","itemData","_type","slug","current","_id","opacity","display"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Link from \"next/link\"\nimport autoBind from 'react-autobind'\nimport Head from 'next/head'\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport Truncate from 'react-truncate';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC'\nimport { Textfit } from 'react-textfit';\nimport innerText from 'react-innertext';\nimport \"../styles/DocumentListStyle.sass\"\nimport Sanity from '../sanity-client.js'\nimport { SanityImageUrl } from '../helperFunctions.js'\n\nconst BlockContent = require('@sanity/block-content-to-react')\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis)\n\nexport default class DocumentList extends React.Component {\n  constructor(){\n    super()\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount(){\n    this.setState({data: this.props.data})\n  }\n\n  render() {\n    var data = this.state.data\n    if(\"maxLength\" in this.props){\n      data = data.slice(0,3)\n    }\n    var headlineKey = this.props.headline\n    var imageKey = this.props.image\n    var primaryDetailKey = this.props.primaryDetail\n    var secondaryDetailKey = this.props.secondaryDetail\n    var bodyKey = this.props.body\n    const serializers = {\n      types: {\n        code: props => (\n          <pre data-language={props.node.language}>\n            <code>{props.node.code}</code>\n          </pre>\n        )\n      }\n    }\n    var returnImg = function(item){\n      if(imageKey == null){\n        return ''\n      }\n      else if(!(imageKey in item)){\n        return ''\n      }\n      else if(!(\"asset\" in item[imageKey])){\n        return ''\n      }\n      else {\n        return <img class=\"DocumentListItemImage\" src={SanityImageUrl(item[imageKey], {w:730,h:730})}/>\n      }\n    }\n\n    var Items = data.slice(0,this.props.limit).map(function(itemData) {\n      return <Link href={\"/\" + itemData._type + \"/[slug]\"} as={\"/\" + itemData._type + \"/\" + itemData.slug.current}>\n              <li className=\"DocumentListItem\" key={itemData._id}>\n                <div className=\"DocumentListItemBody\">\n                  { returnImg(itemData) }\n                  <div className=\"DocumentListItemText\">\n                    <Textfit max={32} mode=\"single\" className=\"DocumentListItemName\">{itemData[headlineKey]}</Textfit>\n                    <h2 className=\"DocumentListItemName-Mobile\">{itemData[headlineKey]}</h2>\n                    <Textfit max={14} mode=\"single\" className=\"DocumentListItemInfo\">\n                      <span className=\"DocumentListItemDate\">{itemData[primaryDetailKey]}</span>&nbsp;\n                      <span className=\"DocumentListItemInfoDivider\" style={{opacity: (secondaryDetailKey == null || itemData[secondaryDetailKey] == '') ? '0' : '1'}}> | </span>\n                      <span className=\"DocumentListItemPrice\" style={{display: (itemData[secondaryDetailKey] == '') ? 'none' : 'inline'}}>{itemData[secondaryDetailKey]}</span>\n                    </Textfit>\n                    <Truncate lines={4} ellipsis={\"...\"} className=\"DocumentListItemDescription\">\n                      <BlockContent blocks={itemData[bodyKey]} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\"></BlockContent>\n                    </Truncate>\n                  </div>\n                </div>\n              </li>\n            </Link>\n    }\n    )\n    return (\n      <ul id=\"DocumentList\">\n        {Items}\n      </ul>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}