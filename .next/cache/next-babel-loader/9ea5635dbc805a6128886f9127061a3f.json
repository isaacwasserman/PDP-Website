{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/isaac/Desktop/PDP-Website/components/DocumentList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport autoBind from 'react-autobind';\nimport Head from 'next/head';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport Truncate from 'react-truncate';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC';\nimport { Textfit } from 'react-textfit';\nimport innerText from 'react-innertext';\nimport \"../styles/DocumentListStyle.sass\";\nimport Sanity from '../sanity-client.js';\nimport { SanityImageUrl } from '../helperFunctions.js';\n\nvar BlockContent = require('@sanity/block-content-to-react');\n\nvar ResponsiveEllipsis = responsiveHOC()(LinesEllipsis);\n\nvar DocumentList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DocumentList, _React$Component);\n\n  function DocumentList() {\n    var _this;\n\n    _classCallCheck(this, DocumentList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DocumentList).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: []\n    });\n\n    return _this;\n  }\n\n  _createClass(DocumentList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n\n      if (\"maxLength\" in this.props) {\n        data = data.slice(0, 3);\n      }\n\n      var headlineKey = this.props.headline;\n      var imageKey = this.props.image;\n      var primaryDetailKey = this.props.primaryDetail;\n      var secondaryDetailKey = this.props.secondaryDetail;\n      var bodyKey = this.props.body;\n      var serializers = {\n        types: {\n          code: function code(props) {\n            return __jsx(\"pre\", {\n              \"data-language\": props.node.language,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, __jsx(\"code\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, props.node.code));\n          }\n        }\n      };\n\n      var returnImg = function returnImg(item) {\n        if (imageKey == null) {\n          return '';\n        } else if (!(imageKey in item)) {\n          return '';\n        } else if (!(\"asset\" in item[imageKey])) {\n          return '';\n        } else {\n          return __jsx(\"img\", {\n            \"class\": \"DocumentListItemImage\",\n            src: SanityImageUrl(item[imageKey], {\n              w: 730,\n              h: 730\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          });\n        }\n      };\n\n      var Items = data.slice(0, this.props.limit).map(function (itemData) {\n        return __jsx(Link, {\n          href: \"/\" + itemData._type + \"/[slug]\",\n          as: \"/\" + itemData._type + \"/\" + itemData.slug.current,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          className: \"DocumentListItem\",\n          key: itemData._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          className: \"DocumentListItemBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, returnImg(itemData), __jsx(\"div\", {\n          className: \"DocumentListItemText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, __jsx(Textfit, {\n          max: 32,\n          mode: \"single\",\n          className: \"DocumentListItemName\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, itemData[headlineKey]), __jsx(\"h2\", {\n          className: \"DocumentListItemName-Mobile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, itemData[headlineKey]), __jsx(Textfit, {\n          max: 14,\n          mode: \"single\",\n          className: \"DocumentListItemInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"DocumentListItemDate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, itemData[primaryDetailKey]), \"\\xA0\", __jsx(\"span\", {\n          className: \"DocumentListItemInfoDivider\",\n          style: {\n            opacity: secondaryDetailKey == null || itemData[secondaryDetailKey] == '' ? '0' : '1'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \" | \"), __jsx(\"span\", {\n          className: \"DocumentListItemPrice\",\n          style: {\n            display: itemData[secondaryDetailKey] == '' ? 'none' : 'inline'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, itemData[secondaryDetailKey])), __jsx(Truncate, {\n          lines: 4,\n          ellipsis: \"...\",\n          className: \"DocumentListItemDescription\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, __jsx(BlockContent, {\n          blocks: itemData[bodyKey],\n          serializers: serializers,\n          projectId: \"ocpl5ulk\",\n          dataset: \"pdp-data\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }))))));\n      });\n      return __jsx(\"ul\", {\n        id: \"DocumentList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, Items);\n    }\n  }]);\n\n  return DocumentList;\n}(React.Component);\n\nexport { DocumentList as default };","map":{"version":3,"sources":["/Users/isaac/Desktop/PDP-Website/components/DocumentList.js"],"names":["React","Link","autoBind","Head","LinesEllipsis","Truncate","responsiveHOC","Textfit","innerText","Sanity","SanityImageUrl","BlockContent","require","ResponsiveEllipsis","DocumentList","data","setState","props","state","slice","headlineKey","headline","imageKey","image","primaryDetailKey","primaryDetail","secondaryDetailKey","secondaryDetail","bodyKey","body","serializers","types","code","node","language","returnImg","item","w","h","Items","limit","map","itemData","_type","slug","current","_id","opacity","display","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Link from \"next/link\"\nimport autoBind from 'react-autobind'\nimport Head from 'next/head'\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport Truncate from 'react-truncate';\nimport responsiveHOC from 'react-lines-ellipsis/lib/responsiveHOC'\nimport { Textfit } from 'react-textfit';\nimport innerText from 'react-innertext';\nimport \"../styles/DocumentListStyle.sass\"\nimport Sanity from '../sanity-client.js'\nimport { SanityImageUrl } from '../helperFunctions.js'\n\nconst BlockContent = require('@sanity/block-content-to-react')\nconst ResponsiveEllipsis = responsiveHOC()(LinesEllipsis)\n\nexport default class DocumentList extends React.Component {\n  constructor(){\n    super()\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount(){\n    this.setState({data: this.props.data})\n  }\n\n  render() {\n    var data = this.state.data\n    if(\"maxLength\" in this.props){\n      data = data.slice(0,3)\n    }\n    var headlineKey = this.props.headline\n    var imageKey = this.props.image\n    var primaryDetailKey = this.props.primaryDetail\n    var secondaryDetailKey = this.props.secondaryDetail\n    var bodyKey = this.props.body\n    const serializers = {\n      types: {\n        code: props => (\n          <pre data-language={props.node.language}>\n            <code>{props.node.code}</code>\n          </pre>\n        )\n      }\n    }\n    var returnImg = function(item){\n      if(imageKey == null){\n        return ''\n      }\n      else if(!(imageKey in item)){\n        return ''\n      }\n      else if(!(\"asset\" in item[imageKey])){\n        return ''\n      }\n      else {\n        return <img class=\"DocumentListItemImage\" src={SanityImageUrl(item[imageKey], {w:730,h:730})}/>\n      }\n    }\n\n    var Items = data.slice(0,this.props.limit).map(function(itemData) {\n      return <Link href={\"/\" + itemData._type + \"/[slug]\"} as={\"/\" + itemData._type + \"/\" + itemData.slug.current}>\n              <li className=\"DocumentListItem\" key={itemData._id}>\n                <div className=\"DocumentListItemBody\">\n                  { returnImg(itemData) }\n                  <div className=\"DocumentListItemText\">\n                    <Textfit max={32} mode=\"single\" className=\"DocumentListItemName\">{itemData[headlineKey]}</Textfit>\n                    <h2 className=\"DocumentListItemName-Mobile\">{itemData[headlineKey]}</h2>\n                    <Textfit max={14} mode=\"single\" className=\"DocumentListItemInfo\">\n                      <span className=\"DocumentListItemDate\">{itemData[primaryDetailKey]}</span>&nbsp;\n                      <span className=\"DocumentListItemInfoDivider\" style={{opacity: (secondaryDetailKey == null || itemData[secondaryDetailKey] == '') ? '0' : '1'}}> | </span>\n                      <span className=\"DocumentListItemPrice\" style={{display: (itemData[secondaryDetailKey] == '') ? 'none' : 'inline'}}>{itemData[secondaryDetailKey]}</span>\n                    </Textfit>\n                    <Truncate lines={4} ellipsis={\"...\"} className=\"DocumentListItemDescription\">\n                      <BlockContent blocks={itemData[bodyKey]} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\"></BlockContent>\n                    </Truncate>\n                  </div>\n                </div>\n              </li>\n            </Link>\n    }\n    )\n    return (\n      <ul id=\"DocumentList\">\n        {Items}\n      </ul>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}