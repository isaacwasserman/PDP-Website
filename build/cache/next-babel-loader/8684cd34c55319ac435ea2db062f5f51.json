{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/isaac/sites/pdp-next/pages/press.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Sanity from '../sanity-client.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Document from '../components/Document.js';\nimport autoBind from 'react-autobind';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\n\nclass Press extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      clips: []\n    });\n\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      clips: this.props.data\n    });\n  }\n\n  async getNextPage() {\n    var startIndex = this.state.clips.length;\n    var endIndex = startIndex + this.props.pageIncrement;\n    var query = `*[_type == \"pressclip\"] | order(date desc) [${startIndex}...${endIndex}]`;\n    var newData = await Sanity.fetch(query, {});\n    var oldData = this.state.clips;\n    this.setState({\n      clips: oldData.concat(newData)\n    });\n  }\n\n  render() {\n    var clips = this.state.clips.map(itemData => __jsx(Document, {\n      data: itemData,\n      image: \"heroImage\",\n      headline: \"title\",\n      body: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"PDP\"), __jsx(Header, {\n      CurrentPage: \"Event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), clips, __jsx(BottomScrollListener, {\n      onBottom: this.getNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nPress.getInitialProps = async function (context) {\n  // Get event data\n  const pageIncrement = 2;\n  var query = `*[_type == \"pressclip\"] | order(date desc) [0...${pageIncrement}]`;\n  var data = await Sanity.fetch(query, {});\n  return {\n    data: data,\n    pageIncrement: pageIncrement\n  };\n};\n\nexport default Press;","map":{"version":3,"sources":["/Users/isaac/sites/pdp-next/pages/press.js"],"names":["React","Sanity","Header","Footer","Document","autoBind","BottomScrollListener","Press","Component","constructor","clips","componentDidMount","setState","props","data","getNextPage","startIndex","state","length","endIndex","pageIncrement","query","newData","fetch","oldData","concat","render","map","itemData","getInitialProps","context"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,oBAAP,MAAiC,8BAAjC;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACQ,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,mCAKN;AACNC,MAAAA,KAAK,EAAE;AADD,KALM;;AAEZL,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAKDM,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,QAAL,CAAc;AAACF,MAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC;AAAnB,KAAd;AACD;;AACD,QAAMC,WAAN,GAAmB;AACjB,QAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWP,KAAX,CAAiBQ,MAAlC;AACA,QAAIC,QAAQ,GAAGH,UAAU,GAAG,KAAKH,KAAL,CAAWO,aAAvC;AACA,QAAIC,KAAK,GAAI,+CAA8CL,UAAW,MAAKG,QAAS,GAApF;AACA,QAAIG,OAAO,GAAG,MAAMrB,MAAM,CAACsB,KAAP,CAAaF,KAAb,EAAoB,EAApB,CAApB;AACA,QAAIG,OAAO,GAAG,KAAKP,KAAL,CAAWP,KAAzB;AACA,SAAKE,QAAL,CAAc;AAACF,MAAAA,KAAK,EAACc,OAAO,CAACC,MAAR,CAAeH,OAAf;AAAP,KAAd;AACD;;AACDI,EAAAA,MAAM,GAAE;AACN,QAAIhB,KAAK,GAAG,KAAKO,KAAL,CAAWP,KAAX,CAAiBiB,GAAjB,CAAqBC,QAAQ,IACvC,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,QAAhB;AAA0B,MAAA,KAAK,EAAE,WAAjC;AAA8C,MAAA,QAAQ,EAAE,OAAxD;AAAiE,MAAA,IAAI,EAAE,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CAAZ;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGlB,KAHH,EAIE,MAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAE,KAAKK,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAjCiC;;AAoCpCR,KAAK,CAACsB,eAAN,GAAwB,gBAAeC,OAAf,EAAuB;AAC7C;AACA,QAAMV,aAAa,GAAG,CAAtB;AACA,MAAIC,KAAK,GAAI,mDAAkDD,aAAc,GAA7E;AACA,MAAIN,IAAI,GAAG,MAAMb,MAAM,CAACsB,KAAP,CAAaF,KAAb,EAAoB,EAApB,CAAjB;AACA,SAAO;AAACP,IAAAA,IAAI,EAAEA,IAAP;AAAaM,IAAAA,aAAa,EAAEA;AAA5B,GAAP;AACD,CAND;;AAQA,eAAeb,KAAf","sourcesContent":["import React from 'react'\nimport Sanity from '../sanity-client.js'\nimport Header from '../components/Header.js'\nimport Footer from '../components/Footer.js'\nimport Document from '../components/Document.js'\nimport autoBind from 'react-autobind';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\n\nclass Press extends React.Component {\n  constructor() {\n    super();\n    autoBind(this);\n  }\n\n  state = {\n    clips: []\n  }\n  componentDidMount(){\n    this.setState({clips: this.props.data})\n  }\n  async getNextPage(){\n    var startIndex = this.state.clips.length\n    var endIndex = startIndex + this.props.pageIncrement\n    var query = `*[_type == \"pressclip\"] | order(date desc) [${startIndex}...${endIndex}]`\n    var newData = await Sanity.fetch(query, {})\n    var oldData = this.state.clips\n    this.setState({clips:oldData.concat(newData)})\n  }\n  render(){\n    var clips = this.state.clips.map(itemData => (\n      <Document data={itemData} image={\"heroImage\"} headline={\"title\"} body={\"body\"}/>\n    ))\n    return(\n      <div>\n        <title>PDP</title>\n        <Header CurrentPage=\"Event\"/>\n        {clips}\n        <BottomScrollListener onBottom={this.getNextPage}/>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nPress.getInitialProps = async function(context){\n  // Get event data\n  const pageIncrement = 2\n  var query = `*[_type == \"pressclip\"] | order(date desc) [0...${pageIncrement}]`\n  var data = await Sanity.fetch(query, {})\n  return {data: data, pageIncrement: pageIncrement}\n}\n\nexport default Press;\n"]},"metadata":{},"sourceType":"module"}