{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Sanity from '../../sanity-client.js';\nimport Header from '../../components/Header.js';\nimport Footer from '../../components/Footer.js';\nimport Document from '../../components/Document.js';\n\nvar PressClip =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PressClip, _React$Component);\n\n  function PressClip() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PressClip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PressClip)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: {}\n    });\n\n    return _this;\n  }\n\n  _createClass(PressClip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = this.props.data;\n      data.readableDate = new Date(data.date).toLocaleString([], {\n        year: 'numeric',\n        month: '2-digit',\n        day: 'numeric'\n      });\n      this.setState({\n        data: data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"title\", null, \"PDP\"), __jsx(Header, {\n        CurrentPage: \"Press Clip\"\n      }), __jsx(Document, {\n        data: this.props.data,\n        image: \"heroImage\",\n        headline: \"title\",\n        body: \"body\",\n        primaryDetail: \"primaryDetail\",\n        secondaryDetail: \"secondaryDetail\"\n      }), __jsx(Footer, null));\n    }\n  }]);\n\n  return PressClip;\n}(React.Component);\n\nPressClip.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var slug, query, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Get slug from URL\n            slug = context.query.slug; // Get event data\n\n            query = \"*[_type == \\\"pressclip\\\" && slug.current == \\\"\".concat(slug, \"\\\"]{ \\\"primaryDetail\\\": author + \\\" for \\\" + organization + \\\" - \\\" + date, ... }\");\n            _context.next = 4;\n            return Sanity.fetch(query, {});\n\n          case 4:\n            data = _context.sent;\n            data = data[0]; // Construct secondaryDetail\n\n            if (typeof data.articleURL !== \"undefined\") {\n              data.secondaryDetail = __jsx(\"a\", {\n                href: data.articleURL\n              }, \"Read it on \" + data.organization + \" here\");\n            } else {\n              data.secondaryDetail = '';\n            }\n\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default PressClip;","map":null,"metadata":{},"sourceType":"module"}