{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/isaac/Desktop/PDP-Website/pages/project/[slug].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Sanity from '../../sanity-client.js';\nimport Header from '../../components/Header.js';\nimport Footer from '../../components/Footer.js';\nimport DocumentList from '../../components/DocumentList.js';\nimport { SanityImageUrl, findFocalPoint } from \"../../helperFunctions.js\";\nimport \"../../styles/project.sass\";\nimport { BlockContent, serializers } from \"../../sanity-tools.js\";\n\nvar Project =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  function Project() {\n    _classCallCheck(this, Project);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Project).apply(this, arguments));\n  }\n\n  _createClass(Project, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"PDP\"), __jsx(Header, {\n        CurrentPage: \"Project\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        id: \"project-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        id: \"ImageContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: SanityImageUrl(this.props.project.image, {\n          w: 1500,\n          h: 750\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        id: \"ProjectTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.project.title), __jsx(\"div\", {\n        id: \"Stripe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        id: \"project-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, __jsx(BlockContent, {\n        blocks: this.props.project.description,\n        serializers: serializers,\n        projectId: \"ocpl5ulk\",\n        dataset: \"pdp-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        id: \"Related\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        id: \"RelatedEventsHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.relatedEvents.length > 0 ? 'Related Events:' : ''), __jsx(DocumentList, {\n        data: this.props.relatedEvents,\n        maxLength: 3,\n        image: \"image\",\n        headline: \"title\",\n        primaryDetail: \"readableDate\",\n        secondaryDetail: \"readablePrice\",\n        body: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), __jsx(\"h1\", {\n        id: \"RelatedPostsHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.relatedPress.length > 0 ? 'Related Press:' : ''), __jsx(DocumentList, {\n        data: this.props.relatedPress,\n        maxLength: 3,\n        image: \"heroImage\",\n        headline: \"title\",\n        primaryDetail: \"readableDate\",\n        secondaryDetail: null,\n        body: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))), __jsx(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nProject.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var slug, query, projects, project, currentDate, relatedEvents, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, event, relatedPress, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, clip;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // Get slug from URL\n            slug = context.query.slug; // Get project data\n\n            query = \"*[_type == \\\"project\\\" && slug.current == \\\"\".concat(slug, \"\\\"]\");\n            _context.next = 4;\n            return Sanity.fetch(query, {});\n\n          case 4:\n            projects = _context.sent;\n            project = projects[0]; // Get related events\n\n            currentDate = new Date().toISOString();\n            query = \"*[_type == \\\"event\\\" && relatedProjects[]._ref == \\\"\".concat(project._id, \"\\\" && date >= \\\"\").concat(currentDate, \"\\\"]\");\n            _context.next = 10;\n            return Sanity.fetch(query, {});\n\n          case 10:\n            relatedEvents = _context.sent;\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context.prev = 14;\n\n            for (_iterator = _getIterator(relatedEvents); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              event = _step.value;\n              event.readableDate = new Date(event.date).toLocaleString([], {\n                year: 'numeric',\n                month: '2-digit',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n              });\n              event.readablePrice = event.price == 0 ? '' : \"$\" + event.price;\n            } // Get related press\n\n\n            _context.next = 22;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](14);\n            _didIteratorError = true;\n            _iteratorError = _context.t0;\n\n          case 22:\n            _context.prev = 22;\n            _context.prev = 23;\n\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n\n          case 25:\n            _context.prev = 25;\n\n            if (!_didIteratorError) {\n              _context.next = 28;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 28:\n            return _context.finish(25);\n\n          case 29:\n            return _context.finish(22);\n\n          case 30:\n            query = \"*[_type == \\\"pressclip\\\" && relatedProjects[]._ref == \\\"\".concat(project._id, \"\\\"]\");\n            _context.next = 33;\n            return Sanity.fetch(query, {});\n\n          case 33:\n            relatedPress = _context.sent;\n            _iteratorNormalCompletion2 = true;\n            _didIteratorError2 = false;\n            _iteratorError2 = undefined;\n            _context.prev = 37;\n\n            for (_iterator2 = _getIterator(relatedPress); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              clip = _step2.value;\n              clip.readableDate = new Date(clip.date).toLocaleString([], {\n                year: 'numeric',\n                month: '2-digit',\n                day: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n              });\n            } // Send props\n\n\n            _context.next = 45;\n            break;\n\n          case 41:\n            _context.prev = 41;\n            _context.t1 = _context[\"catch\"](37);\n            _didIteratorError2 = true;\n            _iteratorError2 = _context.t1;\n\n          case 45:\n            _context.prev = 45;\n            _context.prev = 46;\n\n            if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n              _iterator2[\"return\"]();\n            }\n\n          case 48:\n            _context.prev = 48;\n\n            if (!_didIteratorError2) {\n              _context.next = 51;\n              break;\n            }\n\n            throw _iteratorError2;\n\n          case 51:\n            return _context.finish(48);\n\n          case 52:\n            return _context.finish(45);\n\n          case 53:\n            return _context.abrupt(\"return\", {\n              project: project,\n              relatedEvents: relatedEvents,\n              relatedPress: relatedPress\n            });\n\n          case 54:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[14, 18, 22, 30], [23,, 25, 29], [37, 41, 45, 53], [46,, 48, 52]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Project;","map":{"version":3,"sources":["/Users/isaac/Desktop/PDP-Website/pages/project/[slug].js"],"names":["React","Link","useRouter","Sanity","Header","Footer","DocumentList","SanityImageUrl","findFocalPoint","BlockContent","serializers","Project","props","project","image","w","h","title","description","relatedEvents","length","relatedPress","Component","getInitialProps","context","slug","query","fetch","projects","currentDate","Date","toISOString","_id","event","readableDate","date","toLocaleString","year","month","day","hour","minute","readablePrice","price","clip"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router';\nimport Sanity from '../../sanity-client.js'\nimport Header from '../../components/Header.js'\nimport Footer from '../../components/Footer.js'\nimport DocumentList from '../../components/DocumentList.js'\nimport { SanityImageUrl, findFocalPoint } from \"../../helperFunctions.js\"\nimport \"../../styles/project.sass\"\nimport { BlockContent, serializers } from \"../../sanity-tools.js\"\n\nclass Project extends React.Component {\n  render(){\n    return(\n      <div>\n        <title>PDP</title>\n        <Header CurrentPage=\"Project\"/>\n        <div id=\"project-body\">\n          <div id=\"hero\">\n            <div id=\"ImageContainer\">\n              <img src={SanityImageUrl(this.props.project.image, {w: 1500, h: 750})}/>\n            </div>\n            <div id=\"ProjectTitle\">\n              <h1>{this.props.project.title}</h1>\n              <div id=\"Stripe\"></div>\n            </div>\n          </div>\n          <div id=\"project-description\">\n            <BlockContent blocks={this.props.project.description} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\"/>\n          </div>\n          <div id=\"Related\">\n            <h1 id=\"RelatedEventsHeader\">{this.props.relatedEvents.length > 0 ? 'Related Events:' : ''}</h1>\n            <DocumentList data={this.props.relatedEvents} maxLength={3} image={\"image\"} headline={\"title\"} primaryDetail={\"readableDate\"} secondaryDetail={\"readablePrice\"} body={\"Description\"}/>\n            <h1 id=\"RelatedPostsHeader\">{this.props.relatedPress.length > 0 ? 'Related Press:' : ''}</h1>\n            <DocumentList data={this.props.relatedPress} maxLength={3} image={\"heroImage\"} headline={\"title\"} primaryDetail={\"readableDate\"} secondaryDetail={null} body={\"body\"}/>\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nProject.getInitialProps = async function(context){\n  // Get slug from URL\n  var slug = context.query.slug\n  // Get project data\n  var query = `*[_type == \"project\" && slug.current == \"${slug}\"]`\n  var projects = await Sanity.fetch(query, {})\n  var project = projects[0]\n  // Get related events\n  var currentDate = (new Date()).toISOString()\n  query = `*[_type == \"event\" && relatedProjects[]._ref == \"${project._id}\" && date >= \"${currentDate}\"]`\n  var relatedEvents = await Sanity.fetch(query, {})\n  for(var event of relatedEvents){\n    event.readableDate = (new Date(event.date)).toLocaleString([], {year:'numeric', month: '2-digit', day:'numeric', hour: '2-digit', minute:'2-digit'})\n    event.readablePrice = (event.price == 0) ? '' : (\"$\" + event.price)\n  }\n  // Get related press\n  query = `*[_type == \"pressclip\" && relatedProjects[]._ref == \"${project._id}\"]`\n  var relatedPress = await Sanity.fetch(query, {})\n  for(var clip of relatedPress){\n    clip.readableDate = (new Date(clip.date)).toLocaleString([], {year:'numeric', month: '2-digit', day:'numeric', hour: '2-digit', minute:'2-digit'})\n  }\n  // Send props\n  return {project: project, relatedEvents: relatedEvents, relatedPress: relatedPress}\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}