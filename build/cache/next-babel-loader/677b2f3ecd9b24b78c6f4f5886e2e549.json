{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/isaac/sites/pdp-next/components/Document.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport autoBind from 'react-autobind';\nimport Head from 'next/head';\nimport \"../styles/document.sass\";\nimport Sanity from '../sanity-client.js';\nimport { SanityImageUrl } from '../helperFunctions.js';\n\nconst BlockContent = require('@sanity/block-content-to-react');\n\nclass Document extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      data: []\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.props.data\n    });\n  }\n\n  render() {\n    var imageKey = this.props.image;\n    var headlineKey = this.props.headline;\n    var bodyKey = this.props.body;\n    const serializers = {\n      types: {\n        code: props => __jsx(\"pre\", {\n          \"data-language\": props.node.language,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, __jsx(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, props.node.code)),\n        embed: props => __jsx(\"div\", {\n          className: \"embed\",\n          dangerouslySetInnerHTML: {\n            __html: props.node.code\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        })\n      }\n    };\n\n    function findFocalPoint(image) {\n      if (\"hotspot\" in image) {\n        var x = image.hotspot.x;\n        var y = image.hotspot.y;\n        return {\n          x: x,\n          y: y\n        };\n      } else {\n        return {\n          x: 0.5,\n          y: 0.5\n        };\n      }\n    }\n\n    var returnImg = function (item) {\n      if (imageKey == null) {\n        return '';\n      } else if (!(imageKey in item)) {\n        return '';\n      } else if (!(\"asset\" in item[imageKey])) {\n        return '';\n      } else {\n        var assetID = item[imageKey].asset._ref;\n        return __jsx(\"img\", {\n          id: \"DocumentImage\",\n          src: SanityImageUrl(assetID, {\n            w: 800,\n            h: 400,\n            fp: findFocalPoint(item[imageKey])\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        });\n      }\n    };\n\n    return __jsx(\"div\", {\n      id: \"DocumentContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, returnImg(this.props.data) != '' ? __jsx(\"div\", {\n      id: \"ImageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", returnImg(this.props.data), \" \") : null, __jsx(\"div\", {\n      id: \"DocumentText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.props.data[headlineKey]), __jsx(BlockContent, {\n      id: \"DocumentDescription\",\n      blocks: this.props.data[bodyKey],\n      serializers: serializers,\n      projectId: \"ocpl5ulk\",\n      dataset: \"pdp-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Document;","map":{"version":3,"sources":["/Users/isaac/sites/pdp-next/components/Document.js"],"names":["React","Link","autoBind","Head","Sanity","SanityImageUrl","BlockContent","require","Document","Component","constructor","data","componentDidMount","setState","props","render","imageKey","image","headlineKey","headline","bodyKey","body","serializers","types","code","node","language","embed","__html","findFocalPoint","x","hotspot","y","returnImg","item","assetID","asset","_ref","w","h","fp"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Link from \"next/link\"\nimport autoBind from 'react-autobind'\nimport Head from 'next/head'\nimport \"../styles/document.sass\"\nimport Sanity from '../sanity-client.js'\nimport { SanityImageUrl } from '../helperFunctions.js'\nconst BlockContent = require('@sanity/block-content-to-react')\n\nclass Document extends React.Component {\n  constructor(){\n    super()\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount(){\n    this.setState({data: this.props.data})\n  }\n  render() {\n    var imageKey = this.props.image\n    var headlineKey = this.props.headline\n    var bodyKey = this.props.body\n    const serializers = {\n      types: {\n        code: props => (\n          <pre data-language={props.node.language}>\n            <code>{props.node.code}</code>\n          </pre>\n        ),\n        embed: props => (\n          <div className=\"embed\" dangerouslySetInnerHTML={{__html:\n        props.node.code}}></div>\n        )\n      }\n    }\n    function findFocalPoint(image){\n      if(\"hotspot\" in image){\n        var x = image.hotspot.x\n        var y = image.hotspot.y\n        return {x: x, y: y}\n      }\n      else {\n        return {x: 0.5, y: 0.5}\n      }\n    }\n    var returnImg = function(item){\n      if(imageKey == null){\n        return ''\n      }\n      else if(!(imageKey in item)){\n        return ''\n      }\n      else if(!(\"asset\" in item[imageKey])){\n        return ''\n      }\n      else {\n        var assetID = item[imageKey].asset._ref\n        return <img id=\"DocumentImage\" src={SanityImageUrl(assetID, {w:800,h:400,fp:findFocalPoint(item[imageKey])})}/>\n      }\n    }\n    return (\n      <div id=\"DocumentContainer\">\n        { (returnImg(this.props.data) != '') ? <div id=\"ImageContainer\"> {returnImg(this.props.data)} </div> : null }\n        <div id=\"DocumentText\">\n          <h3>{this.props.data[headlineKey]}</h3>\n          <BlockContent id=\"DocumentDescription\" blocks={this.props.data[bodyKey]} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Document\n"]},"metadata":{},"sourceType":"module"}