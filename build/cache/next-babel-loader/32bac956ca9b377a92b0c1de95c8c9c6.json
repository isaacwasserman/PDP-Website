{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Sanity from '../../sanity-client.js';\nimport Header from '../../components/Header.js';\nimport Footer from '../../components/Footer.js';\nimport DocumentList from '../../components/DocumentList.js';\nimport { SanityImageUrl, findFocalPoint } from \"../../helperFunctions.js\";\nimport \"../../styles/project.sass\";\nimport { BlockContent, serializers } from \"../../sanity-tools.js\";\n\nvar Project =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  function Project() {\n    _classCallCheck(this, Project);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Project).apply(this, arguments));\n  }\n\n  _createClass(Project, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"title\", null, this.props.project.title), __jsx(Header, {\n        CurrentPage: \"Project\"\n      }), __jsx(\"div\", {\n        id: \"project-body\"\n      }, __jsx(\"div\", {\n        id: \"hero\"\n      }, __jsx(\"div\", {\n        id: \"ImageContainer\"\n      }, __jsx(\"img\", {\n        src: SanityImageUrl(this.props.project.image, {\n          w: 1500,\n          h: 750\n        })\n      })), __jsx(\"div\", {\n        id: \"ProjectTitle\"\n      }, __jsx(\"h1\", null, this.props.project.title), __jsx(\"div\", {\n        id: \"Stripe\"\n      }))), __jsx(\"div\", {\n        id: \"project-description\"\n      }, __jsx(BlockContent, {\n        blocks: this.props.project.description,\n        serializers: serializers,\n        projectId: \"ocpl5ulk\",\n        dataset: \"pdp-data\"\n      })), __jsx(\"div\", {\n        id: \"Related\"\n      }, __jsx(\"h1\", {\n        id: \"RelatedEventsHeader\"\n      }, this.props.relatedEvents.length > 0 ? 'Related Events:' : ''), __jsx(DocumentList, {\n        data: this.props.relatedEvents,\n        maxLength: 3,\n        image: \"image\",\n        headline: \"title\",\n        primaryDetail: \"readableDate\",\n        secondaryDetail: \"readablePrice\",\n        body: \"Description\"\n      }), __jsx(\"h1\", {\n        id: \"RelatedPostsHeader\"\n      }, this.props.relatedPress.length > 0 ? 'Related Press:' : ''), __jsx(DocumentList, {\n        data: this.props.relatedPress,\n        maxLength: 3,\n        image: \"heroImage\",\n        headline: \"title\",\n        primaryDetail: \"readableDate\",\n        secondaryDetail: null,\n        body: \"body\"\n      }))), __jsx(Footer, null));\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nProject.getInitialProps = function _callee(context) {\n  var slug, query, projects, project, currentDate, relatedEvents, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, event, relatedPress, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, clip;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // Get slug from URL\n          slug = context.query.slug; // Get project data\n\n          query = \"*[_type == \\\"project\\\" && slug.current == \\\"\".concat(slug, \"\\\"]\");\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(Sanity.fetch(query, {}));\n\n        case 4:\n          projects = _context.sent;\n          project = projects[0]; // Get related events\n\n          currentDate = new Date().toISOString();\n          query = \"*[_type == \\\"event\\\" && relatedProjects[]._ref == \\\"\".concat(project._id, \"\\\" && date >= \\\"\").concat(currentDate, \"\\\"]\");\n          _context.next = 10;\n          return _regeneratorRuntime.awrap(Sanity.fetch(query, {}));\n\n        case 10:\n          relatedEvents = _context.sent;\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 14;\n\n          for (_iterator = _getIterator(relatedEvents); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            event = _step.value;\n            event.readableDate = new Date(event.date).toLocaleString([], {\n              year: 'numeric',\n              month: '2-digit',\n              day: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n            event.readablePrice = event.price == 0 ? '' : \"$\" + event.price;\n          } // Get related press\n\n\n          _context.next = 22;\n          break;\n\n        case 18:\n          _context.prev = 18;\n          _context.t0 = _context[\"catch\"](14);\n          _didIteratorError = true;\n          _iteratorError = _context.t0;\n\n        case 22:\n          _context.prev = 22;\n          _context.prev = 23;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 25:\n          _context.prev = 25;\n\n          if (!_didIteratorError) {\n            _context.next = 28;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 28:\n          return _context.finish(25);\n\n        case 29:\n          return _context.finish(22);\n\n        case 30:\n          query = \"*[_type == \\\"pressclip\\\" && relatedProjects[]._ref == \\\"\".concat(project._id, \"\\\"]\");\n          _context.next = 33;\n          return _regeneratorRuntime.awrap(Sanity.fetch(query, {}));\n\n        case 33:\n          relatedPress = _context.sent;\n          _iteratorNormalCompletion2 = true;\n          _didIteratorError2 = false;\n          _iteratorError2 = undefined;\n          _context.prev = 37;\n\n          for (_iterator2 = _getIterator(relatedPress); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            clip = _step2.value;\n            clip.readableDate = new Date(clip.date).toLocaleString([], {\n              year: 'numeric',\n              month: '2-digit',\n              day: 'numeric',\n              hour: '2-digit',\n              minute: '2-digit'\n            });\n          } // Send props\n\n\n          _context.next = 45;\n          break;\n\n        case 41:\n          _context.prev = 41;\n          _context.t1 = _context[\"catch\"](37);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context.t1;\n\n        case 45:\n          _context.prev = 45;\n          _context.prev = 46;\n\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n\n        case 48:\n          _context.prev = 48;\n\n          if (!_didIteratorError2) {\n            _context.next = 51;\n            break;\n          }\n\n          throw _iteratorError2;\n\n        case 51:\n          return _context.finish(48);\n\n        case 52:\n          return _context.finish(45);\n\n        case 53:\n          return _context.abrupt(\"return\", {\n            project: project,\n            relatedEvents: relatedEvents,\n            relatedPress: relatedPress\n          });\n\n        case 54:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[14, 18, 22, 30], [23,, 25, 29], [37, 41, 45, 53], [46,, 48, 52]]);\n};\n\nexport default Project;","map":null,"metadata":{},"sourceType":"module"}