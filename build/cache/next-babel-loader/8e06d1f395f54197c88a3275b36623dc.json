{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Sanity from '../sanity-client.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Document from '../components/Document.js';\nimport autoBind from 'react-autobind';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport Sidebar from \"../components/Sidebar.js\";\nimport Link from 'next/link';\nimport \"../styles/sidebar.sass\";\n\nvar Announcements =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Announcements, _React$Component);\n\n  function Announcements() {\n    var _this;\n\n    _classCallCheck(this, Announcements);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Announcements).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      announcements: [],\n      sidebarOpen: false\n    });\n\n    autoBind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Announcements, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = this.props.data;\n      this.setState({\n        announcements: data\n      });\n    }\n  }, {\n    key: \"getNextPage\",\n    value: function () {\n      var _getNextPage = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var startIndex, endIndex, query, newData, oldData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                startIndex = this.state.announcements.length;\n                endIndex = startIndex + this.props.pageIncrement;\n                query = \"*[_type == \\\"announcement\\\"] | order(date desc) [\".concat(startIndex, \"...\").concat(endIndex, \"]\");\n                _context.next = 5;\n                return Sanity.fetch(query, {});\n\n              case 5:\n                newData = _context.sent;\n                oldData = this.state.announcements;\n                this.setState({\n                  announcements: oldData.concat(newData)\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getNextPage() {\n        return _getNextPage.apply(this, arguments);\n      }\n\n      return getNextPage;\n    }()\n  }, {\n    key: \"onSetSidebarOpen\",\n    value: function onSetSidebarOpen(open) {\n      this.setState({\n        sidebarOpen: open\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.announcements;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var announcement = _step.value;\n          announcement.readableDate = new Date(announcement._createdAt).toLocaleString([], {\n            year: 'numeric',\n            month: '2-digit',\n            day: 'numeric',\n            hour: \"numeric\",\n            minute: \"numeric\"\n          });\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var announcements = data.map(function (itemData) {\n        return __jsx(Document, {\n          data: itemData,\n          image: \"heroImage\",\n          headline: \"title\",\n          body: \"body\",\n          primaryDetail: \"readableDate\"\n        });\n      });\n      var ArchiveItems = this.props.allAnnouncements.map(function (itemData) {\n        return __jsx(Link, {\n          href: \"/pressclip/\" + itemData.slug.current,\n          to: \"/announcement/\" + itemData.slug.current\n        }, __jsx(\"li\", null, itemData.title));\n      });\n      console.log(this.props.allAnnouncements);\n      return __jsx(\"div\", null, __jsx(\"title\", null, \"PDP\"), __jsx(Header, {\n        CurrentPage: \"Announcements\"\n      }), announcements, __jsx(Sidebar, {\n        headline: \"Archive\"\n      }, ArchiveItems), __jsx(BottomScrollListener, {\n        onBottom: this.getNextPage\n      }), __jsx(Footer, null));\n    }\n  }]);\n\n  return Announcements;\n}(React.Component);\n\nAnnouncements.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(context) {\n    var pageIncrement, query, data, allAnnouncements;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            // Get announcements\n            pageIncrement = 2;\n            query = \"*[_type == \\\"announcement\\\"] | order(date desc) [0...\".concat(pageIncrement, \"]\");\n            _context2.next = 4;\n            return Sanity.fetch(query, {});\n\n          case 4:\n            data = _context2.sent;\n            // Get names of ALL announcements\n            query = \"*[_type == \\\"announcement\\\"]{ title, slug }\";\n            _context2.next = 8;\n            return Sanity.fetch(query, {});\n\n          case 8:\n            allAnnouncements = _context2.sent;\n            console.log(allAnnouncements);\n            return _context2.abrupt(\"return\", {\n              data: data,\n              pageIncrement: pageIncrement,\n              allAnnouncements: allAnnouncements\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Announcements;","map":null,"metadata":{},"sourceType":"module"}