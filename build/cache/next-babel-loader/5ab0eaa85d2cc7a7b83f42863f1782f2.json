{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Object$values from \"@babel/runtime-corejs2/core-js/object/values\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport dynamic from 'next/dynamic';\nimport { useEffect, useState } from 'react';\nimport '../styles/calendar.sass';\nlet CalendarComponent;\nexport default function FullCalendar(props) {\n  const {\n    0: calendarLoaded,\n    1: setCalendarLoaded\n  } = useState(false);\n  useEffect(() => {\n    CalendarComponent = dynamic({\n      modules: () => ({\n        calendar: import('@fullcalendar/react'),\n        dayGridPlugin: import('@fullcalendar/daygrid'),\n        timeGridPlugin: import('@fullcalendar/timegrid')\n      }),\n      render: (props, _ref) => {\n        let {\n          calendar: Calendar\n        } = _ref,\n            plugins = _objectWithoutProperties(_ref, [\"calendar\"]);\n\n        return __jsx(Calendar, _extends({}, props, {\n          plugins: _Object$values(plugins),\n          ref: props.myRef\n        }));\n      },\n      ssr: false,\n      loadableGenerated: {\n        webpack: () => [require.resolveWeak('@fullcalendar/react'), require.resolveWeak('@fullcalendar/daygrid'), require.resolveWeak('@fullcalendar/timegrid')],\n        modules: ['@fullcalendar/react', '@fullcalendar/daygrid', '@fullcalendar/timegrid']\n      }\n    });\n    setCalendarLoaded(true);\n  });\n\n  let showCalendar = props => {\n    if (!calendarLoaded) return __jsx(\"div\", null, \"Loading ...\");\n    return __jsx(CalendarComponent, props);\n  };\n\n  return __jsx(\"div\", null, showCalendar(props));\n}","map":null,"metadata":{},"sourceType":"module"}