{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/isaac/sites/pdp-next/components/Document.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\nimport autoBind from 'react-autobind';\nimport Head from 'next/head';\nimport \"../styles/document.sass\";\nimport Sanity from '../sanity-client.js';\nimport { SanityImageUrl } from '../helperFunctions.js';\n\nvar BlockContent = require('@sanity/block-content-to-react');\n\nvar Document =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Document, _React$Component);\n\n  function Document() {\n    var _this;\n\n    _classCallCheck(this, Document);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Document).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Document, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var imageKey = this.props.image;\n      var headlineKey = this.props.headline;\n      var bodyKey = this.props.body;\n      var serializers = {\n        types: {\n          code: function code(props) {\n            return __jsx(\"pre\", {\n              \"data-language\": props.node.language,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29\n              },\n              __self: this\n            }, __jsx(\"code\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, props.node.code));\n          },\n          embed: function embed(props) {\n            return __jsx(\"div\", {\n              className: \"embed\",\n              dangerouslySetInnerHTML: {\n                __html: props.node.code\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            });\n          }\n        }\n      };\n\n      function findFocalPoint(image) {\n        if (\"hotspot\" in image) {\n          var x = image.hotspot.x;\n          var y = image.hotspot.y;\n          return {\n            x: x,\n            y: y\n          };\n        } else {\n          return {\n            x: 0.5,\n            y: 0.5\n          };\n        }\n      }\n\n      var returnImg = function returnImg(item) {\n        if (imageKey == null) {\n          return '';\n        } else if (!(imageKey in item)) {\n          return '';\n        } else if (!(\"asset\" in item[imageKey])) {\n          return '';\n        } else {\n          var assetID = item[imageKey].asset._ref;\n          return __jsx(\"img\", {\n            id: \"DocumentImage\",\n            src: SanityImageUrl(assetID, {\n              w: 800,\n              h: 400,\n              fp: findFocalPoint(item[imageKey])\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        }\n      };\n\n      return __jsx(\"div\", {\n        id: \"DocumentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, returnImg(this.props.data) != '' ? __jsx(\"div\", {\n        id: \"ImageContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \" \", returnImg(this.props.data), \" \") : null, __jsx(\"div\", {\n        id: \"DocumentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.props.data[headlineKey]), __jsx(BlockContent, {\n        id: \"DocumentDescription\",\n        blocks: this.props.data[bodyKey],\n        serializers: serializers,\n        projectId: \"ocpl5ulk\",\n        dataset: \"pdp-data\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Document;\n}(React.Component);\n\nexport default Document;","map":{"version":3,"sources":["/Users/isaac/sites/pdp-next/components/Document.js"],"names":["React","Link","autoBind","Head","Sanity","SanityImageUrl","BlockContent","require","Document","data","setState","props","imageKey","image","headlineKey","headline","bodyKey","body","serializers","types","code","node","language","embed","__html","findFocalPoint","x","hotspot","y","returnImg","item","assetID","asset","_ref","w","h","fp","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Link from \"next/link\"\nimport autoBind from 'react-autobind'\nimport Head from 'next/head'\nimport \"../styles/document.sass\"\nimport Sanity from '../sanity-client.js'\nimport { SanityImageUrl } from '../helperFunctions.js'\nconst BlockContent = require('@sanity/block-content-to-react')\n\nclass Document extends React.Component {\n  constructor(){\n    super()\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount(){\n    this.setState({data: this.props.data})\n  }\n  render() {\n    var imageKey = this.props.image\n    var headlineKey = this.props.headline\n    var bodyKey = this.props.body\n    const serializers = {\n      types: {\n        code: props => (\n          <pre data-language={props.node.language}>\n            <code>{props.node.code}</code>\n          </pre>\n        ),\n        embed: props => (\n          <div className=\"embed\" dangerouslySetInnerHTML={{__html:\n        props.node.code}}></div>\n        )\n      }\n    }\n    function findFocalPoint(image){\n      if(\"hotspot\" in image){\n        var x = image.hotspot.x\n        var y = image.hotspot.y\n        return {x: x, y: y}\n      }\n      else {\n        return {x: 0.5, y: 0.5}\n      }\n    }\n    var returnImg = function(item){\n      if(imageKey == null){\n        return ''\n      }\n      else if(!(imageKey in item)){\n        return ''\n      }\n      else if(!(\"asset\" in item[imageKey])){\n        return ''\n      }\n      else {\n        var assetID = item[imageKey].asset._ref\n        return <img id=\"DocumentImage\" src={SanityImageUrl(assetID, {w:800,h:400,fp:findFocalPoint(item[imageKey])})}/>\n      }\n    }\n    return (\n      <div id=\"DocumentContainer\">\n        { (returnImg(this.props.data) != '') ? <div id=\"ImageContainer\"> {returnImg(this.props.data)} </div> : null }\n        <div id=\"DocumentText\">\n          <h3>{this.props.data[headlineKey]}</h3>\n          <BlockContent id=\"DocumentDescription\" blocks={this.props.data[bodyKey]} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Document\n"]},"metadata":{},"sourceType":"module"}