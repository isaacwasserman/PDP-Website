{"ast":null,"code":"import _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport { projectId, dataset } from \"./sanity-client.js\"; // Sort data by timeDelta value in ascending order\n\nexport function sortByTimeDelta(data) {\n  // Give each announcement/event a \"timeDelta\" value that is the number of milliseconds between when an announcement was last updated or an event occurs.\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(data), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var item = _step.value;\n      var itemTime = 0;\n\n      if (item._type == \"event\") {\n        var itemTime = Date.parse(item.date);\n      } else if (item._type == \"announcement\") {\n        var itemTime = Date.parse(item._updatedAt);\n      }\n\n      item.timeDelta = Math.abs(itemTime - new Date().getTime());\n    } // Sort\n\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  data.sort(function compare(a, b) {\n    if (a.timeDelta < b.timeDelta) {\n      return -1;\n    }\n\n    if (a.timeDelta > b.timeDelta) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return data;\n} // Custom UrlBuilder\n\nexport function SanityImageUrl(ref, options) {\n  // Build assetID\n  var ref = ref.split(\"-\");\n  var assetID = ref[1];\n  var dimensions = ref[2];\n  var extension = ref[3];\n  var assetID = assetID + \"-\" + dimensions + \".\" + extension; // Assemble baseURL\n\n  var baseArray = [\"https://cdn.sanity.io/images\", projectId, dataset, assetID];\n  var baseURL = baseArray.join(\"/\"); // Assemble queryString\n\n  var params = [];\n\n  for (var key in options) {\n    var param = key + \"=\" + options[key];\n    params.push(param);\n  }\n\n  if (!(\"fit\" in options)) {\n    params.push(\"fit=crop\");\n  }\n\n  if (!(\"crop\" in options)) {\n    if (\"fp-x\" in options && \"fp-y\" in options) {\n      params.push(\"crop=focalpoint\");\n    } else {\n      params.push(\"crop=entropy\");\n    }\n  }\n\n  if (\"fp\" in options) {\n    params.push(\"fp-x=\" + options.fp.x);\n    params.push(\"fp-y=\" + options.fp.y);\n  }\n\n  params.push(\"q=70\");\n  params.push(\"auto=format\");\n  var queryString = params.join(\"&\"); // Assemble fullURL\n\n  var fullURL = baseURL + \"?\" + queryString;\n  return fullURL;\n}\nexport function SortProjects(raw) {\n  var sorted = [];\n  var prioritized = [];\n  var nonPrioritized = [];\n\n  for (var i = 0; i < raw.length; i++) {\n    if (raw[i].node.order > 0) {\n      prioritized.push(raw[i]);\n    } else {\n      nonPrioritized.push(raw[i]);\n    }\n  }\n\n  nonPrioritized.sort(function (a, b) {\n    return Date.parse(b.node._updatedAt) - Date.parse(a.node._updatedAt);\n  });\n  sorted = nonPrioritized;\n\n  for (var i = 0; i < prioritized.length; i++) {\n    sorted.splice(prioritized[i].node.order - 1, 0, prioritized[i]);\n  }\n\n  return sorted;\n}\nexport function findFocalPoint(image) {\n  if (\"hotspot\" in image) {\n    var x = image.hotspot.x;\n    var y = image.hotspot.y;\n    return {\n      x: x,\n      y: y\n    };\n  } else {\n    return {\n      x: 0.5,\n      y: 0.5\n    };\n  }\n}","map":{"version":3,"sources":["/Users/isaac/sites/pdp-next/helperFunctions.js"],"names":["projectId","dataset","sortByTimeDelta","data","item","itemTime","_type","Date","parse","date","_updatedAt","timeDelta","Math","abs","getTime","sort","compare","a","b","SanityImageUrl","ref","options","split","assetID","dimensions","extension","baseArray","baseURL","join","params","key","param","push","fp","x","y","queryString","fullURL","SortProjects","raw","sorted","prioritized","nonPrioritized","i","length","node","order","splice","findFocalPoint","image","hotspot"],"mappings":"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","sourcesContent":["import { projectId, dataset } from \"./sanity-client.js\"\n\n// Sort data by timeDelta value in ascending order\nexport function sortByTimeDelta(data){\n  // Give each announcement/event a \"timeDelta\" value that is the number of milliseconds between when an announcement was last updated or an event occurs.\n  for(var item of data) {\n    var itemTime = 0\n    if(item._type == \"event\") {\n      var itemTime = Date.parse(item.date)\n    }\n    else if(item._type == \"announcement\") {\n      var itemTime = Date.parse(item._updatedAt)\n    }\n    item.timeDelta = Math.abs(itemTime - (new Date).getTime())\n  }\n  // Sort\n  data.sort(function compare(a, b) {\n    if (a.timeDelta < b.timeDelta) {\n      return -1;\n    }\n    if (a.timeDelta > b.timeDelta) {\n      return 1;\n    }\n    return 0;\n  })\n  return data\n}\n\n// Custom UrlBuilder\nexport function SanityImageUrl(ref, options){\n  // Build assetID\n  var ref = ref.split(\"-\")\n  var assetID = ref[1]\n  var dimensions = ref[2]\n  var extension = ref[3]\n  var assetID = assetID + \"-\" + dimensions + \".\" + extension\n  // Assemble baseURL\n  var baseArray = [\"https://cdn.sanity.io/images\", projectId, dataset, assetID]\n  var baseURL = baseArray.join(\"/\")\n  // Assemble queryString\n  var params = []\n  for(const key in options){\n    var param = key + \"=\" + options[key]\n    params.push(param)\n  }\n  if(!(\"fit\" in options)){\n    params.push(\"fit=crop\")\n  }\n  if(!(\"crop\" in options)){\n    if(\"fp-x\" in options && \"fp-y\" in options){\n      params.push(\"crop=focalpoint\")\n    }\n    else {\n      params.push(\"crop=entropy\")\n    }\n  }\n  if(\"fp\" in options){\n    params.push(\"fp-x=\" + options.fp.x)\n    params.push(\"fp-y=\" + options.fp.y)\n  }\n  params.push(\"q=70\")\n  params.push(\"auto=format\")\n  var queryString = params.join(\"&\")\n  // Assemble fullURL\n  var fullURL = baseURL + \"?\" + queryString\n  return fullURL\n}\n\nexport function SortProjects(raw){\n  var sorted = []\n  var prioritized = []\n  var nonPrioritized = []\n  for(var i=0; i<raw.length; i++){\n    if(raw[i].node.order > 0){\n      prioritized.push(raw[i])\n    }\n    else {\n      nonPrioritized.push(raw[i])\n    }\n  }\n  nonPrioritized.sort(function(a, b) {\n    return Date.parse(b.node._updatedAt) - Date.parse(a.node._updatedAt)\n  })\n  sorted = nonPrioritized\n  for(var i=0; i<prioritized.length; i++){\n    sorted.splice((prioritized[i].node.order - 1), 0, prioritized[i])\n  }\n  return sorted\n}\n\nexport function findFocalPoint(image){\n  if(\"hotspot\" in image){\n    var x = image.hotspot.x\n    var y = image.hotspot.y\n    return {x: x, y: y}\n  }\n  else {\n    return {x: 0.5, y: 0.5}\n  }\n}\n"]},"metadata":{},"sourceType":"module"}