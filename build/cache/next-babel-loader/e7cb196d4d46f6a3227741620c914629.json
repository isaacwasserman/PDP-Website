{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Sanity from '../sanity-client.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Document from '../components/Document.js';\nimport autoBind from 'react-autobind';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport Sidebar from \"../components/Sidebar.js\";\nimport Link from 'next/link';\nimport \"../styles/sidebar.sass\";\n\nclass Press extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      clips: [],\n      sidebarOpen: false\n    });\n\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    var data = this.props.data;\n    this.setState({\n      clips: data\n    });\n  }\n\n  async getNextPage() {\n    var startIndex = this.state.clips.length;\n    var endIndex = startIndex + this.props.pageIncrement;\n    var query = `*[_type == \"pressclip\"]{ \"primaryDetail\": author + \" for \" + organization + \" - \" + date, ... } | order(date desc) [${startIndex}...${endIndex}]`;\n    var newData = await Sanity.fetch(query, {}); // Construct secondaryDetail\n\n    for (var clip of newData) {\n      if (typeof clip.articleURL !== \"undefined\") {\n        clip.secondaryDetail = __jsx(\"a\", {\n          href: clip.articleURL\n        }, \"Read it on \" + clip.organization + \" here\");\n      } else {\n        clip.secondaryDetail = '';\n      }\n    }\n\n    var oldData = this.state.clips;\n    this.setState({\n      clips: oldData.concat(newData)\n    });\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({\n      sidebarOpen: open\n    });\n  }\n\n  render() {\n    var data = this.state.clips;\n\n    for (var clip of data) {\n      clip.readableDate = new Date(clip.date).toLocaleString([], {\n        year: 'numeric',\n        month: '2-digit',\n        day: 'numeric'\n      });\n    }\n\n    var clips = data.map(itemData => __jsx(Document, {\n      data: itemData,\n      image: \"heroImage\",\n      headline: \"title\",\n      body: \"body\",\n      primaryDetail: \"primaryDetail\",\n      secondaryDetail: \"secondaryDetail\"\n    }));\n    var ArchiveItems = this.props.allClips.map(itemData => __jsx(Link, {\n      href: \"/pressclip/\" + itemData.slug.current,\n      to: \"/pressclip/\" + itemData.slug.current\n    }, __jsx(\"li\", null, itemData.title)));\n    return __jsx(\"div\", null, __jsx(\"title\", null, \"PDP\"), __jsx(Header, {\n      CurrentPage: \"Press\"\n    }), clips, __jsx(Sidebar, {\n      headline: \"Archive\"\n    }, ArchiveItems), __jsx(BottomScrollListener, {\n      onBottom: this.getNextPage\n    }), __jsx(Footer, null));\n  }\n\n}\n\nPress.getInitialProps = async function (context) {\n  // Get pressclips\n  const pageIncrement = 2;\n  var query = `*[_type == \"pressclip\"]{ \"primaryDetail\": author + \" for \" + organization + \" - \" + date, ... } | order(date desc) [0...${pageIncrement}]`;\n  var data = await Sanity.fetch(query, {}); // Construct secondaryDetail\n\n  for (var clip of data) {\n    if (typeof clip.articleURL !== \"undefined\") {\n      clip.secondaryDetail = __jsx(\"a\", {\n        href: clip.articleURL\n      }, \"Read it on \" + clip.organization + \" here\");\n    } else {\n      clip.secondaryDetail = '';\n    }\n  } // Get names of ALL clips\n\n\n  query = `*[_type == \"pressclip\"]{ title, slug }`;\n  var allClips = await Sanity.fetch(query, {});\n  return {\n    data: data,\n    pageIncrement: pageIncrement,\n    allClips: allClips\n  };\n};\n\nexport default Press;","map":null,"metadata":{},"sourceType":"module"}