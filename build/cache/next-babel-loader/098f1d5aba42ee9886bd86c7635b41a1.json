{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Sanity from '../sanity-client.js';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Document from '../components/Document.js';\nimport autoBind from 'react-autobind';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport Sidebar from \"../components/Sidebar.js\";\nimport Link from 'next/link';\nimport \"../styles/sidebar.sass\";\n\nclass Announcements extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"state\", {\n      announcements: [],\n      sidebarOpen: false\n    });\n\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    var data = this.props.data;\n    this.setState({\n      announcements: data\n    });\n  }\n\n  async getNextPage() {\n    var startIndex = this.state.announcements.length;\n    var endIndex = startIndex + this.props.pageIncrement;\n    var query = `*[_type == \"announcement\"] | order(date desc) [${startIndex}...${endIndex}]`;\n    var newData = await Sanity.fetch(query, {});\n    var oldData = this.state.announcements;\n    this.setState({\n      announcements: oldData.concat(newData)\n    });\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({\n      sidebarOpen: open\n    });\n  }\n\n  render() {\n    var data = this.state.announcements;\n\n    for (var announcement of data) {\n      announcement.readableDate = new Date(announcement._createdAt).toLocaleString([], {\n        year: 'numeric',\n        month: '2-digit',\n        day: 'numeric',\n        hour: \"numeric\",\n        minute: \"numeric\"\n      });\n    }\n\n    var announcements = data.map(itemData => __jsx(Document, {\n      data: itemData,\n      image: \"heroImage\",\n      headline: \"title\",\n      body: \"body\",\n      primaryDetail: \"readableDate\"\n    }));\n    var ArchiveItems = this.props.allAnnouncements.map(itemData => __jsx(Link, {\n      href: \"/pressclip/\" + itemData.slug.current,\n      to: \"/announcement/\" + itemData.slug.current\n    }, __jsx(\"li\", null, itemData.title)));\n    console.log(this.props.allAnnouncements);\n    return __jsx(\"div\", null, __jsx(\"title\", null, \"PDP\"), __jsx(Header, {\n      CurrentPage: \"Announcements\"\n    }), announcements, __jsx(Sidebar, {\n      headline: \"Archive\"\n    }, ArchiveItems), __jsx(BottomScrollListener, {\n      onBottom: this.getNextPage\n    }), __jsx(Footer, null));\n  }\n\n}\n\nAnnouncements.getInitialProps = async function (context) {\n  // Get announcements\n  const pageIncrement = 2;\n  var query = `*[_type == \"announcement\"] | order(date desc) [0...${pageIncrement}]`;\n  var data = await Sanity.fetch(query, {}); // Get names of ALL announcements\n\n  query = `*[_type == \"announcement\"]{ title, slug }`;\n  var allAnnouncements = await Sanity.fetch(query, {});\n  console.log(allAnnouncements);\n  return {\n    data: data,\n    pageIncrement: pageIncrement,\n    allAnnouncements: allAnnouncements\n  };\n};\n\nexport default Announcements;","map":null,"metadata":{},"sourceType":"module"}