{"ast":null,"code":"var _jsxFileName = \"/Users/isaac/Desktop/PDP-Website/pages/project/[slug].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Sanity from '../../sanity-client.js';\nimport Header from '../../components/Header.js';\nimport Footer from '../../components/Footer.js';\nimport DocumentList from '../../components/DocumentList.js';\nimport { SanityImageUrl, findFocalPoint } from \"../../helperFunctions.js\";\nimport \"../../styles/project.sass\";\nimport { BlockContent, serializers } from \"../../sanity-tools.js\";\n\nclass Project extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"PDP\"), __jsx(Header, {\n      CurrentPage: \"Project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      id: \"project-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"hero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      id: \"ImageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: SanityImageUrl(this.props.project.image, {\n        w: 1500,\n        h: 750\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      id: \"ProjectTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.props.project.title), __jsx(\"div\", {\n      id: \"Stripe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      id: \"project-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(BlockContent, {\n      blocks: this.props.project.description,\n      serializers: serializers,\n      projectId: \"ocpl5ulk\",\n      dataset: \"pdp-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      id: \"Related\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      id: \"RelatedEventsHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.relatedEvents.length > 0 ? 'Related Events:' : ''), __jsx(DocumentList, {\n      data: this.props.relatedEvents,\n      maxLength: 3,\n      image: \"image\",\n      headline: \"title\",\n      primaryDetail: \"readableDate\",\n      secondaryDetail: \"readablePrice\",\n      body: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), __jsx(\"h1\", {\n      id: \"RelatedPostsHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.props.relatedPress.length > 0 ? 'Related Press:' : ''), __jsx(DocumentList, {\n      data: this.props.relatedPress,\n      maxLength: 3,\n      image: \"heroImage\",\n      headline: \"title\",\n      primaryDetail: \"readableDate\",\n      secondaryDetail: null,\n      body: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))), __jsx(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nProject.getInitialProps = async function (context) {\n  // Get slug from URL\n  var slug = context.query.slug; // Get project data\n\n  var query = `*[_type == \"project\" && slug.current == \"${slug}\"]`;\n  var projects = await Sanity.fetch(query, {});\n  var project = projects[0]; // Get related events\n\n  var currentDate = new Date().toISOString();\n  query = `*[_type == \"event\" && relatedProjects[]._ref == \"${project._id}\" && date >= \"${currentDate}\"]`;\n  var relatedEvents = await Sanity.fetch(query, {});\n\n  for (var event of relatedEvents) {\n    event.readableDate = new Date(event.date).toLocaleString([], {\n      year: 'numeric',\n      month: '2-digit',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    event.readablePrice = event.price == 0 ? '' : \"$\" + event.price;\n  } // Get related press\n\n\n  query = `*[_type == \"pressclip\" && relatedProjects[]._ref == \"${project._id}\"]`;\n  var relatedPress = await Sanity.fetch(query, {});\n\n  for (var clip of relatedPress) {\n    clip.readableDate = new Date(clip.date).toLocaleString([], {\n      year: 'numeric',\n      month: '2-digit',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  } // Send props\n\n\n  return {\n    project: project,\n    relatedEvents: relatedEvents,\n    relatedPress: relatedPress\n  };\n};\n\nexport default Project;","map":{"version":3,"sources":["/Users/isaac/Desktop/PDP-Website/pages/project/[slug].js"],"names":["React","Link","useRouter","Sanity","Header","Footer","DocumentList","SanityImageUrl","findFocalPoint","BlockContent","serializers","Project","Component","render","props","project","image","w","h","title","description","relatedEvents","length","relatedPress","getInitialProps","context","slug","query","projects","fetch","currentDate","Date","toISOString","_id","event","readableDate","date","toLocaleString","year","month","day","hour","minute","readablePrice","price","clip"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,0BAA/C;AACA,OAAO,2BAAP;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,uBAA1C;;AAEA,MAAMC,OAAN,SAAsBX,KAAK,CAACY,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,MAAC,MAAD;AAAQ,MAAA,WAAW,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEN,cAAc,CAAC,KAAKO,KAAL,CAAWC,OAAX,CAAmBC,KAApB,EAA2B;AAACC,QAAAA,CAAC,EAAE,IAAJ;AAAUC,QAAAA,CAAC,EAAE;AAAb,OAA3B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKJ,KAAL,CAAWC,OAAX,CAAmBI,KAAxB,CADF,EAEE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJF,CADF,EAUE;AAAK,MAAA,EAAE,EAAC,qBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBK,WAAzC;AAAsD,MAAA,WAAW,EAAEV,WAAnE;AAAgF,MAAA,SAAS,EAAC,UAA1F;AAAqG,MAAA,OAAO,EAAC,UAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,EAaE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,qBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKI,KAAL,CAAWO,aAAX,CAAyBC,MAAzB,GAAkC,CAAlC,GAAsC,iBAAtC,GAA0D,EAAxF,CADF,EAEE,MAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWO,aAA/B;AAA8C,MAAA,SAAS,EAAE,CAAzD;AAA4D,MAAA,KAAK,EAAE,OAAnE;AAA4E,MAAA,QAAQ,EAAE,OAAtF;AAA+F,MAAA,aAAa,EAAE,cAA9G;AAA8H,MAAA,eAAe,EAAE,eAA/I;AAAgK,MAAA,IAAI,EAAE,aAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAI,MAAA,EAAE,EAAC,oBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKP,KAAL,CAAWS,YAAX,CAAwBD,MAAxB,GAAiC,CAAjC,GAAqC,gBAArC,GAAwD,EAArF,CAHF,EAIE,MAAC,YAAD;AAAc,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,YAA/B;AAA6C,MAAA,SAAS,EAAE,CAAxD;AAA2D,MAAA,KAAK,EAAE,WAAlE;AAA+E,MAAA,QAAQ,EAAE,OAAzF;AAAkG,MAAA,aAAa,EAAE,cAAjH;AAAiI,MAAA,eAAe,EAAE,IAAlJ;AAAwJ,MAAA,IAAI,EAAE,MAA9J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAbF,CAHF,EAuBE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD;;AA7BmC;;AAgCtCZ,OAAO,CAACa,eAAR,GAA0B,gBAAeC,OAAf,EAAuB;AAC/C;AACA,MAAIC,IAAI,GAAGD,OAAO,CAACE,KAAR,CAAcD,IAAzB,CAF+C,CAG/C;;AACA,MAAIC,KAAK,GAAI,4CAA2CD,IAAK,IAA7D;AACA,MAAIE,QAAQ,GAAG,MAAMzB,MAAM,CAAC0B,KAAP,CAAaF,KAAb,EAAoB,EAApB,CAArB;AACA,MAAIZ,OAAO,GAAGa,QAAQ,CAAC,CAAD,CAAtB,CAN+C,CAO/C;;AACA,MAAIE,WAAW,GAAI,IAAIC,IAAJ,EAAD,CAAaC,WAAb,EAAlB;AACAL,EAAAA,KAAK,GAAI,oDAAmDZ,OAAO,CAACkB,GAAI,iBAAgBH,WAAY,IAApG;AACA,MAAIT,aAAa,GAAG,MAAMlB,MAAM,CAAC0B,KAAP,CAAaF,KAAb,EAAoB,EAApB,CAA1B;;AACA,OAAI,IAAIO,KAAR,IAAiBb,aAAjB,EAA+B;AAC7Ba,IAAAA,KAAK,CAACC,YAAN,GAAsB,IAAIJ,IAAJ,CAASG,KAAK,CAACE,IAAf,CAAD,CAAuBC,cAAvB,CAAsC,EAAtC,EAA0C;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,KAAK,EAAE,SAAxB;AAAmCC,MAAAA,GAAG,EAAC,SAAvC;AAAkDC,MAAAA,IAAI,EAAE,SAAxD;AAAmEC,MAAAA,MAAM,EAAC;AAA1E,KAA1C,CAArB;AACAR,IAAAA,KAAK,CAACS,aAAN,GAAuBT,KAAK,CAACU,KAAN,IAAe,CAAhB,GAAqB,EAArB,GAA2B,MAAMV,KAAK,CAACU,KAA7D;AACD,GAd8C,CAe/C;;;AACAjB,EAAAA,KAAK,GAAI,wDAAuDZ,OAAO,CAACkB,GAAI,IAA5E;AACA,MAAIV,YAAY,GAAG,MAAMpB,MAAM,CAAC0B,KAAP,CAAaF,KAAb,EAAoB,EAApB,CAAzB;;AACA,OAAI,IAAIkB,IAAR,IAAgBtB,YAAhB,EAA6B;AAC3BsB,IAAAA,IAAI,CAACV,YAAL,GAAqB,IAAIJ,IAAJ,CAASc,IAAI,CAACT,IAAd,CAAD,CAAsBC,cAAtB,CAAqC,EAArC,EAAyC;AAACC,MAAAA,IAAI,EAAC,SAAN;AAAiBC,MAAAA,KAAK,EAAE,SAAxB;AAAmCC,MAAAA,GAAG,EAAC,SAAvC;AAAkDC,MAAAA,IAAI,EAAE,SAAxD;AAAmEC,MAAAA,MAAM,EAAC;AAA1E,KAAzC,CAApB;AACD,GApB8C,CAqB/C;;;AACA,SAAO;AAAC3B,IAAAA,OAAO,EAAEA,OAAV;AAAmBM,IAAAA,aAAa,EAAEA,aAAlC;AAAiDE,IAAAA,YAAY,EAAEA;AAA/D,GAAP;AACD,CAvBD;;AAyBA,eAAeZ,OAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/router';\nimport Sanity from '../../sanity-client.js'\nimport Header from '../../components/Header.js'\nimport Footer from '../../components/Footer.js'\nimport DocumentList from '../../components/DocumentList.js'\nimport { SanityImageUrl, findFocalPoint } from \"../../helperFunctions.js\"\nimport \"../../styles/project.sass\"\nimport { BlockContent, serializers } from \"../../sanity-tools.js\"\n\nclass Project extends React.Component {\n  render(){\n    return(\n      <div>\n        <title>PDP</title>\n        <Header CurrentPage=\"Project\"/>\n        <div id=\"project-body\">\n          <div id=\"hero\">\n            <div id=\"ImageContainer\">\n              <img src={SanityImageUrl(this.props.project.image, {w: 1500, h: 750})}/>\n            </div>\n            <div id=\"ProjectTitle\">\n              <h1>{this.props.project.title}</h1>\n              <div id=\"Stripe\"></div>\n            </div>\n          </div>\n          <div id=\"project-description\">\n            <BlockContent blocks={this.props.project.description} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\"/>\n          </div>\n          <div id=\"Related\">\n            <h1 id=\"RelatedEventsHeader\">{this.props.relatedEvents.length > 0 ? 'Related Events:' : ''}</h1>\n            <DocumentList data={this.props.relatedEvents} maxLength={3} image={\"image\"} headline={\"title\"} primaryDetail={\"readableDate\"} secondaryDetail={\"readablePrice\"} body={\"Description\"}/>\n            <h1 id=\"RelatedPostsHeader\">{this.props.relatedPress.length > 0 ? 'Related Press:' : ''}</h1>\n            <DocumentList data={this.props.relatedPress} maxLength={3} image={\"heroImage\"} headline={\"title\"} primaryDetail={\"readableDate\"} secondaryDetail={null} body={\"body\"}/>\n          </div>\n        </div>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nProject.getInitialProps = async function(context){\n  // Get slug from URL\n  var slug = context.query.slug\n  // Get project data\n  var query = `*[_type == \"project\" && slug.current == \"${slug}\"]`\n  var projects = await Sanity.fetch(query, {})\n  var project = projects[0]\n  // Get related events\n  var currentDate = (new Date()).toISOString()\n  query = `*[_type == \"event\" && relatedProjects[]._ref == \"${project._id}\" && date >= \"${currentDate}\"]`\n  var relatedEvents = await Sanity.fetch(query, {})\n  for(var event of relatedEvents){\n    event.readableDate = (new Date(event.date)).toLocaleString([], {year:'numeric', month: '2-digit', day:'numeric', hour: '2-digit', minute:'2-digit'})\n    event.readablePrice = (event.price == 0) ? '' : (\"$\" + event.price)\n  }\n  // Get related press\n  query = `*[_type == \"pressclip\" && relatedProjects[]._ref == \"${project._id}\"]`\n  var relatedPress = await Sanity.fetch(query, {})\n  for(var clip of relatedPress){\n    clip.readableDate = (new Date(clip.date)).toLocaleString([], {year:'numeric', month: '2-digit', day:'numeric', hour: '2-digit', minute:'2-digit'})\n  }\n  // Send props\n  return {project: project, relatedEvents: relatedEvents, relatedPress: relatedPress}\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}