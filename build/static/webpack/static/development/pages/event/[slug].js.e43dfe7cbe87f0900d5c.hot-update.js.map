{"version":3,"file":"static/webpack/static/development/pages/event/[slug].js.e43dfe7cbe87f0900d5c.hot-update.js","sources":["webpack:///./components/Document.js"],"sourcesContent":["import React from \"react\"\nimport Link from \"next/link\"\nimport autoBind from 'react-autobind'\nimport Head from 'next/head'\nimport \"../styles/document.sass\"\nimport Sanity from '../sanity-client.js'\nimport { SanityImageUrl } from '../helperFunctions.js'\nimport File from \"./File.js\"\nconst BlockContent = require('@sanity/block-content-to-react')\n\nclass Document extends React.Component {\n  constructor(){\n    super()\n  }\n\n  state = {\n    data: []\n  }\n\n  componentDidMount(){\n    var data = this.props.data\n    data[null] = ''\n    this.setState({data: this.props.data})\n  }\n  render() {\n    var imageKey = this.props.image\n    var headlineKey = this.props.headline\n    var primaryDetailKey = this.props.primaryDetail\n    var secondaryDetailKey = this.props.secondaryDetail\n    var bodyKey = this.props.body\n    const serializers = {\n      types: {\n        code: props => (\n          <pre data-language={props.node.language}>\n            <code>{props.node.code}</code>\n          </pre>\n        ),\n        file: props => {\n          var _ref = props.node.asset._ref\n          var splitRef = _ref.split('-')\n          var reassembledFilename = splitRef[1] + '.' + splitRef[2]\n          var url = 'https://cdn.sanity.io/files/ocpl5ulk/pdp-data/' + reassembledFilename\n          var Element = <File src={url}/>\n          return Element\n        },\n        embed: props => (\n          <div className=\"embed\" dangerouslySetInnerHTML={{__html:\n        props.node.code}}></div>\n        )\n      }\n    }\n    function findFocalPoint(image){\n      if(\"hotspot\" in image){\n        var x = image.hotspot.x\n        var y = image.hotspot.y\n        return {x: x, y: y}\n      }\n      else {\n        return {x: 0.5, y: 0.5}\n      }\n    }\n    var returnImg = function(item){\n      if(imageKey == null){\n        return ''\n      }\n      else if(!(imageKey in item)){\n        return ''\n      }\n      else if(!(\"asset\" in item[imageKey])){\n        return ''\n      }\n      else {\n        return <img id=\"DocumentImage\" src={SanityImageUrl(item[imageKey], {w:800,h:400,fp:findFocalPoint(item[imageKey])})}/>\n      }\n    }\n    return (\n      <div id=\"DocumentContainer\">\n        { (returnImg(this.props.data) != '') ? <div id=\"ImageContainer\"> {returnImg(this.props.data)} </div> : null }\n        <div id=\"DocumentText\">\n          <h3>{this.props.data[headlineKey]}</h3>\n          <h6 style={{display: (primaryDetailKey != null || typeof primaryDetailKey !== 'undefined' ? 'inline' : 'none')}}>\n            <span id=\"PrimaryDetail\">{this.props.data[primaryDetailKey]}</span>\n            <span id=\"DetailDivider\" style={{display: ((secondaryDetailKey != null || typeof secondaryDetailKey !== 'undefined') && this.props.data[secondaryDetailKey] != '' ? 'inline' : 'none')}}>|</span>\n            <span id=\"SecondaryDetail\">{this.props.data[secondaryDetailKey]}</span>\n            <span id=\"DetailDivider\" style={{display: ((tertiaryDetailKey != null || typeof tertiaryDetailKey !== 'undefined') && this.props.data[tertiaryDetailKey] != '' ? 'inline' : 'none')}}>|</span>\n            <span id=\"SecondaryDetail\">{this.props.data[tertiaryDetailKey]}</span>\n          </h6>\n          <BlockContent id=\"DocumentDescription\" blocks={this.props.data[bodyKey]} serializers={serializers} projectId=\"ocpl5ulk\" dataset=\"pdp-data\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Document\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAKA;AADA;AACA;AALA;AAEA;AACA;;;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAdA;AADA;AACA;AAojFA;AACA;AAmFA;;;;A","sourceRoot":""}