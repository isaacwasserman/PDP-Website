{"version":3,"file":"static/webpack/static/development/pages/announcements.js.d22f424a8cd291e6d47f.hot-update.js","sources":["webpack:///./pages/announcements.js"],"sourcesContent":["import React from 'react'\nimport Sanity from '../sanity-client.js'\nimport Header from '../components/Header.js'\nimport Footer from '../components/Footer.js'\nimport Document from '../components/Document.js'\nimport autoBind from 'react-autobind';\nimport BottomScrollListener from 'react-bottom-scroll-listener';\nimport Sidebar from \"../components/Sidebar.js\";\nimport Link from 'next/link'\n\nimport \"../styles/sidebar.sass\"\n\nclass Announcements extends React.Component {\n  constructor() {\n    super();\n    autoBind(this);\n  }\n\n  state = {\n    announcements: [],\n    sidebarOpen: false\n  }\n  componentDidMount(){\n    var data = this.props.data\n    this.setState({announcements: data})\n  }\n  async getNextPage(){\n    var startIndex = this.state.announcements.length\n    var endIndex = startIndex + this.props.pageIncrement\n    var query = `*[_type == \"announcement\"] | order(date desc) [${startIndex}...${endIndex}]`\n    var newData = await Sanity.fetch(query, {})\n    var oldData = this.state.announcements\n    this.setState({announcements:oldData.concat(newData)})\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n  render(){\n    var data = this.state.announcements\n    for(var announcement of data){\n      console.log(announcement);\n      announcement.readableDate = (new Date(announcement.date)).toLocaleString([], {year:'numeric', month: '2-digit', day:'numeric'})\n    }\n    var announcements = data.map(itemData => (\n      <Document data={itemData} image={\"heroImage\"} headline={\"title\"} body={\"body\"} primaryDetail={\"readableDate\"}/>\n    ))\n    var ArchiveItems = this.props.allAnnouncements.map(itemData => (\n      <Link href={\"/pressclip/\" + itemData.slug.current} to={\"/announcement/\" + itemData.slug.current}><li>{itemData.title}</li></Link>\n    ))\n    console.log(this.props.allAnnouncements)\n    return(\n      <div>\n        <title>PDP</title>\n        <Header CurrentPage=\"Announcements\"/>\n        {announcements}\n        <Sidebar headline=\"Archive\">{ArchiveItems}</Sidebar>\n        <BottomScrollListener onBottom={this.getNextPage}/>\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nAnnouncements.getInitialProps = async function(context){\n  // Get announcements\n  const pageIncrement = 2\n  var query = `*[_type == \"announcement\"] | order(date desc) [0...${pageIncrement}]`\n  var data = await Sanity.fetch(query, {})\n  // Get names of ALL announcements\n  query = `*[_type == \"announcement\"]{ title, slug }`\n  var allAnnouncements = await Sanity.fetch(query, {})\n  console.log(allAnnouncements)\n  return {data: data, pageIncrement: pageIncrement, allAnnouncements: allAnnouncements}\n}\n\nexport default Announcements;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AAFA;AACA;AAJA;AAFA;AAGA;AACA;;;AAKA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;AAEA;AACA;AACA;;AACA;AACA;;AADA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjDA;AACA;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AANA;AAAA;AACA;AADA;AAOA;AACA;AARA;AASA;AAAA;AAAA;AAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;;;;A","sourceRoot":""}